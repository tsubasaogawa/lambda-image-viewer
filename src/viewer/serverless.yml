service: lambda-image-viewer

provider:
  name: aws
  runtime: provided.al2
  memorySize: 256
  versionFunctions: false

  region: ${env:REGION}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:HeadObject*"
        - "s3:GetObject*"
        - "s3:PutObject*"
      Resource: "arn:aws:s3:::${env:ORIGIN_DOMAIN}/*"
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:BatchGetItem"
        - "dynamodb:Scan"
        - "dynamodb:Query"
        - "dynamodb:ConditionCheckItem"
        - "dynamodb:BatchGetItem"
        - "dynamodb:BatchWriteItem"
        - "dynamodb:PutItem"
        - "dynamodb:DescribeTable"
        - "dynamodb:DeleteItem"
        - "dynamodb:UpdateItem"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
      Resource: "arn:aws:lambda:${env:REGION}:${aws:accountId}:function:${self:service}-*"

package:
  individually: true

plugins:
  - serverless-go-plugin

custom:
  go:
    cmd: GOARCH=amd64 GOOS=linux go build -tags lambda.norpc
    supportedRuntimes: ["provided.al2"]
    buildProvidedRuntimeAsBootstrap: true
  origin:
    eventTriggerPrefix: "blog/"

functions:
  viewer:
    handler: cmd/viewer/*.go
    url: true
    environment:
      REGION: ${env:REGION}
      ORIGIN_DOMAIN: ${env:ORIGIN_DOMAIN}
      VIEWER_DOMAIN: ${env:VIEWER_DOMAIN}
      TABLE: "${env:ORIGIN_DOMAIN}-item"
      IMG_WIDTH_TO_CLIPBOARD: 1024
      IMG_HEIGHT_TO_CLIPBOARD: 681

  tagger:
    handler: cmd/tagger/*.go
    url: false
    environment:
      REGION: ${env:REGION}
      TABLE: "${env:ORIGIN_DOMAIN}-item"
      THUMBNAIL_FUNCTION_NAME: "lambda-image-viewer-${sls:stage}-thumbnail"
    events:
      - s3:
          bucket: ${env:ORIGIN_DOMAIN}
          event: "s3:ObjectCreated:*"
          rules:
            - prefix: ${self:custom.origin.eventTriggerPrefix}
            - suffix: .jpg
          existing: true

  thumbnail:
    handler: cmd/thumbnail/*.go
    url: false
    environment:
      REGION: ${env:REGION}
      TABLE: "${env:ORIGIN_DOMAIN}-item"

  cleanup:
    handler: cmd/cleanup/*.go
    url: false
    memorySize: 128
    timeout: 900
    environment:
      REGION: ${env:REGION}
      TABLE: "${env:ORIGIN_DOMAIN}-item"
      S3_BUCKET_NAME: ${env:ORIGIN_DOMAIN}

useDotenv: true
