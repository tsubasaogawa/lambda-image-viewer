service: lambda-image-viewer

provider:
  name: aws
  runtime: provided.al2
  memorySize: 256
  versionFunctions: false

  region: ${env:REGION}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:BatchGetItem"
        - "dynamodb:Scan"
        - "dynamodb:Query"
        - "dynamodb:ConditionCheckItem"
        - "dynamodb:BatchGetItem"
        - "dynamodb:BatchWriteItem"
        - "dynamodb:PutItem"
        - "dynamodb:DescribeTable"
        - "dynamodb:DeleteItem"
        - "dynamodb:UpdateItem"
      Resource: "*"

package:
  individually: true

plugins:
  - serverless-go-plugin

custom:
  go:
    cmd: GOARCH=amd64 GOOS=linux go build -tags lambda.norpc
    supportedRuntimes: ["provided.al2"]
    buildProvidedRuntimeAsBootstrap: true

functions:
  viewer:
    handler: cmd/viewer/*.go
    url: true
    environment:
      REGION: ${env:REGION}
      ORIGIN_DOMAIN: ${env:ORIGIN_DOMAIN}
      TABLE: "${env:ORIGIN_DOMAIN}-item"

  tagger:
    handler: cmd/tagger/*.go
    url: false
    environment:
      REGION: ${env:REGION}
      TABLE: "${env:ORIGIN_DOMAIN}-item"
    events:
      - s3:
          bucket: ${env:ORIGIN_DOMAIN}
          event: "s3:ObjectCreated:*"
          rules:
            - suffix: .jpg
          existing: true

useDotenv: true
